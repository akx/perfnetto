name: CI

on:
  push:
    branches:
      - master
    tags:
      - "v*"
  pull_request:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: false
      - uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: ".pre-commit-config.yaml"
      - run: uvx --with pre-commit-uv pre-commit run --show-diff-on-failure --color=always --all-files
  build-wheels:
    if: github.event_name == 'push'
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          # - windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"
      - run: uvx cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ARCHS: auto64
          CIBW_BEFORE_BUILD: git clean -ffdx
          CIBW_BUILD_FRONTEND: build
          CIBW_SKIP: "cp39* cp310* cp311* pp* *i686 *musl*"
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
  test:
    name: Test - ${{ matrix.os }} - ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
        python-version: [3.12, 3.13]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - uses: astral-sh/setup-uv@v3
      - run: uv venv
      - run: uv pip install -e .[test]
      - run: uv run -m pytest --cov . tests
  publish:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs:
      - build-wheels
    name: Upload release to PyPI
    runs-on: ubuntu-latest
    environment:
      name: release
      url: https://pypi.org/p/perfnetto/
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: cibw-wheels-*
          path: dist/
          merge-multiple: "true"
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
          print-hash: true
          attestations: "true"
